문제를 보고 직관적으로 DP(다이나믹프로그래밍)알고리즘을 사용해서 해결해야겠다고 생각
가로길이를 x라고 칭하자
x가 2 일때는 경우의수가 3가지이고 홀수는 만들어질 수 없다
따라서 x가 4일때의 개수를 생각해보았을때에 3 * 3 가지로 생각했는데
문제에서 x가 4일때에는 11 이라고 알려주었기때문에 어떤 모형이 더 추가로 가능한지 확인할 수 있었다
추가된 모형을 확인해봤더니 x가 4이상일때부터는
x=4일때는
| = |
ㅡㅡ
와 같은 모형이 추가되고
x=6 일때에는
|= =|
ㅡㅡㅡ
와 같은 모형이추가된다 
즉 2개씩 추가로 생긴다는 규칙을 찾았고 규칙에 맞게 코딩하였다.


#include <string>
#include <vector>
#include <iostream>

using namespace std;

long long dp[5555];

int solution(int n) {
    dp[2]=3;
    long long sum=0;
    for(int i=4;i<=n;i+=2){
        dp[i]=(dp[i-2]*dp[2])%1000000007;
        sum+=(dp[i-4]*2)%1000000007;
        dp[i]+=(sum+2)%1000000007;
    }
    return dp[n]%1000000007;
}
