timetable을 분단위로 변경후 오름차순으로 정렬
n만큼 for문을 돌려서 누가 탑승 가능한지 확인
9시부터 t 만큼 증가시키고 9시+t 범위 내에 속하는지, 
탑승한 사람이 m을 넘어가는지 확인 idx 변수를 사용해서 누구까지 탑승했는지확인
for 문이 n-1을 탐색할때 탑승할 수 있는 가장 늦은 시간 확인

#include <string>
#include <vector>
#include<iostream>
#include<algorithm>

using namespace std;

string solution(int n, int t, int m, vector<string> timetable) {
    string answer = "";
    vector<int> time;
    //시간을 분으로 변경후 time 배열에 저장후 정렬
    for (auto x : timetable)
        time.push_back(60 * stoi(x.substr(0, 2)) + stoi(x.substr(3, 2)));
    sort(time.begin(), time.end());

    int idx = 0;
    int cur = 540;
    for (int i = 0; i < n; i++) {
        int cnt = 0;
        for (int j = idx; j < time.size(); j++) {
            if (time[j] <= cur) {
                idx++;
                cnt++;
                if (cnt == m)
                    break;
            }
            else
                break;
        }
        if (i == n - 1) { //마지막 버스일때
            int hour = 0, minute = 0, lastTime = 0;
            if (cnt == m)
                lastTime = time[idx - 1] - 1;
            else
                lastTime = cur;
            hour = lastTime / 60;
            minute = lastTime % 60;
            answer += (hour < 10) ? ('0' + to_string(hour) + ':') : to_string(hour) + ':';
            answer += (minute < 10) ? ('0' + to_string(minute)) : to_string(minute);
        }
        cur += t;
    }
    return answer;
}
