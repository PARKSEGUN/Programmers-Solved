dp[555][555] 를 설정해주면 쉽게 접근할 수 있었다.

#include<iostream>
#include <string>
#include <vector>
#include<algorithm>
#include<map>
#include<memory.h>

using namespace std;

int dp[555][555];	//[x][y]=z -> x번째 줄에 y번째 칸에 올수있는 최댓값 x
int map[555][555];
int solution(vector<vector<int>> triangle) {
	int answer = 0;
	memset(dp, -1, sizeof(dp));
	dp[0][0] = triangle[0][0];
	for (int i = 1; i < triangle.size(); i++) {
		for (int j = 0; j < triangle[i].size(); j++) {
			int& res = dp[i][j];
			if (res != -1) { continue; }
			else {
				res = 0;
				if (j - 1 >= 0) { res = max(dp[i - 1][j - 1] + triangle[i][j], dp[i - 1][j] + triangle[i][j]); }//올바른 범위인지 확인
				else if (j - 1 < 0) { res = dp[i - 1][j] + triangle[i][j]; }
				else if (j == triangle[i].size() - 1) { res = dp[i - 1][j - 1] + triangle[i][j]; }
			}
			if (i == triangle.size() - 1) { answer = max(res, answer); }
		}

	}
	return answer;
}
